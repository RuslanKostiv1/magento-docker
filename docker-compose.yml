version: '3.7'
services:
  mutagen:
    build: ./build/mutagen
    init: true
    container_name: web-mutagen
    volumes:
      - code:/var/www
  web:
    image: nginx:1.21.4-alpine
    hostname: web
    volumes:
      - code:/var/www
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/server.crt:/etc/nginx/server.crt
      - ./etc/nginx/server.key:/etc/nginx/server.key
      - ./etc/nginx/fetch_env.js:/etc/nginx/fetch_env.js
    networks:
      default:
        aliases:
          - magento.test
    ports:
      - "${WEB_PORT}:80"
      - "${WEBS_PORT}:443"
    depends_on:
      - app
    #    command: nginx-debug -g 'daemon off;'
    x-hint: uncomment the line above and change error_log in nginx.conf
    x-info: https://devdocs.magento.com/guides/v2.3/install-gde/prereq/nginx.html
  # the mailhog server, use http://localhost:8025/ to open mailbox
  mail:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
  db:
    image: mysql:8
    hostname: db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "magento"
    shm_size: '2gb'
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./etc/mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf
    ports:
      - "${DB_PORT}:3306"
    cap_add:
      - SYS_NICE
    x-hits:
      - bin/magento dev:query-log:enable and watch var/debug/db.log
    x-info: https://devdocs.magento.com/guides/v2.3/install-gde/prereq/mysql.html

  # Magento 2 container with commerce-data-export repo
  app:
    image: rkostiv/php-fpm:8.1.0 # 7.4.0 | 8.1.0 are available at the moment
    # to re-build image with gRPC use the following docker file:
#    build:
#      context: .
#      dockerfile: build/php/fpm
    hostname: app
    ports:
      - "${SSH_PORT}:22"
      - "9001:9001"
    depends_on:
      - elastic
      - db
    stop_signal: SIGKILL
    env_file:
      - ./.env
    volumes:
      - code:/var/www
      - ./.env:/tmp/.env
      - ./etc/php/livesearch-env.php:/tmp/livesearch-env.php
      - ./etc/php/storefront-env.php:/tmp/storefront-env.php
      - ./etc/php/magento-config.php:/tmp/magento-config.php
      - ./etc/php/magento-config.php.dist:/tmp/magento-config.php.dist
      - ./etc/php/magento_config_setup.php:/tmp/magento_config_setup.php
      - ./etc/php/path-validator.patch:/tmp/path-validator.patch
      - ./etc/php/livesearch-qa-config.php:/tmp/livesearch-qa-config.php
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/build.php:/tmp/build.php
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./etc/php/tests/integration/install-config-mysql.php:/var/www/magento2ce/dev/tests/integration/etc/install-config-mysql.php:rw
      - ./etc/php/tests/api-functional/install-config-mysql.php:/var/www/magento2ce/dev/tests/api-functional/config/install-config-mysql.php:rw
      - ./etc/php/tests/api-functional/phpunit_rest.xml:/var/www/magento2ce/dev/tests/api-functional/phpunit_rest.xml:rw
      - ./etc/php/tests/api-functional/phpunit_graphql.xml:/var/www/magento2ce/dev/tests/api-functional/phpunit_graphql.xml:rw
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=magento.test
    command: sh -c 'service ssh start; php-fpm -R'
  elastic:
    image: elasticsearch:$ELASTICSEARCH_IMAGE_VERSION
    hostname: elastic
    ports:
      - "${ELASTIC_PORT}:9200"
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  redis:
    image: redis
    hostname: redis
    ports:
      - "${REDIS_PORT}:6379"
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
#  rabbit:
#    image: rabbitmq:management
#    hostname: rabbitmq
#    ports:
#      - "${RABBIT_PORT}:15672"
#  mail:
#    image: mailhog/mailhog
#    hostname: mail
#    ports:
#      - "1025:1025"
#      - "8025:8025"
networks:
  default:
    driver: bridge
volumes:
  code:
